<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.jxc.dao.SaleListGoodsDao">

    <resultMap id="BaseResultMap" type="com.atguigu.jxc.domain.SaleListGoodsVo">
        <result column="sale_number" property="number" jdbcType="VARCHAR" />
        <result column="sale_date" property="date" jdbcType="VARCHAR" />
        <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
        <result column="goods_code" property="code" jdbcType="VARCHAR" />
        <result column="goods_name" property="name" jdbcType="VARCHAR" />
        <result column="goods_model" property="model" jdbcType="VARCHAR" />
        <result column="goods_type_name" property="goodsType" jdbcType="VARCHAR" />
        <result column="goods_unit" property="unit" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="DECIMAL" />
        <result column="goods_num" property="num" jdbcType="INTEGER" />
        <result column="total" property="total" jdbcType="DECIMAL" />
    </resultMap>

    <select id="saleListGoods" resultMap="BaseResultMap">
        SELECT t_sale_list.`sale_number`, t_sale_list.`sale_date`, t_customer.`customer_name`, t_sale_list_goods.`goods_code`, t_sale_list_goods.`goods_name`, t_sale_list_goods.`goods_model`, t_goods_type.`goods_type_name`, t_sale_list_goods.`goods_unit`, t_sale_list_goods.`price`, t_sale_list_goods.`goods_num`, t_sale_list_goods.`total`
        FROM t_sale_list_goods
        LEFT JOIN t_sale_list
        ON t_sale_list_goods.sale_list_id=t_sale_list.sale_list_id
        LEFT JOIN t_customer
        ON t_sale_list.`customer_id`=t_customer.`customer_id`
        LEFT JOIN t_goods_type
        ON t_sale_list_goods.`goods_type_id`=t_goods_type.`goods_type_id`
        <where>
            <if test="sTime != null and sTime != ''">
                AND t_sale_list.sale_date &gt;= #{sTime}
            </if>
            <if test="eTime != null and eTime != ''">
                AND t_sale_list.sale_date &lt;= #{eTime}
            </if>
            <if test="goodsTypeId != null and goodsTypeId != ''">
                AND t_goods_type.goods_type_id = #{goodsTypeId}
            </if>
            <if test="codeOrName != null and codeOrName != ''">
                AND t_sale_list_goods.goods_name = #{codeOrName}
                or t_sale_list_goods.goods_code = #{codeOrName}
            </if>
        </where>
    </select>

    <resultMap id="BaseResultMap1" type="com.atguigu.jxc.domain.GetSaleDataByDayVo">
        <result column="sale_date" property="date" jdbcType="VARCHAR" />
        <result column="sale_total" property="saleTotal" jdbcType="DECIMAL" />
        <result column="purchasing_total" property="purchasingTotal" jdbcType="DECIMAL" />
    </resultMap>

    <select id="getSaleDataByDay" resultMap="BaseResultMap1">
        SELECT t_sale_list.sale_date,SUM(t_sale_list.`amount_payable`) AS sale_total,SUM(t_purchase_list.`amount_payable`) AS purchasing_total
        FROM t_sale_list
        LEFT JOIN t_purchase_list
        ON t_sale_list.`sale_date`=t_purchase_list.`purchase_date`
        <where>
            <if test="sTime != null and sTime != ''">
                AND t_sale_list.sale_date &gt;= #{sTime}
            </if>
            <if test="eTime != null and eTime != ''">
                AND t_sale_list.sale_date &lt;= #{eTime}
            </if>
        </where>
        GROUP BY t_sale_list.`sale_date`
    </select>

    <resultMap id="BaseResultMap2" type="com.atguigu.jxc.domain.GetSaleDataByDayVo">
        <result column="mont" property="date" jdbcType="VARCHAR" />
        <result column="sale_total" property="saleTotal" jdbcType="DECIMAL" />
        <result column="purchasing_total" property="purchasingTotal" jdbcType="DECIMAL" />
    </resultMap>
    <select id="getSaleDataByMonth" resultMap="BaseResultMap2">
        SELECT DATE_FORMAT(t_sale_list.sale_date, '%Y-%m') mont,SUM(t_sale_list.`amount_payable`) AS sale_total,SUM(t_purchase_list.`amount_payable`) AS purchasing_total
        FROM t_sale_list
        LEFT JOIN t_purchase_list
        ON t_sale_list.`sale_date`=t_purchase_list.`purchase_date`
        <where>
            <if test="sTime != null and sTime != ''">
                AND t_sale_list.sale_date &gt;= #{sTime}
            </if>
            <if test="eTime != null and eTime != ''">
                AND t_sale_list.sale_date &lt;= #{eTime}
            </if>
        </where>
        GROUP BY DATE_FORMAT(t_sale_list.sale_date, '%Y-%m')
    </select>


    <resultMap id="listByResultMap" type="java.util.Map">
        <result column="sale_list_id" property="saleListId"/>
        <result column="sale_number" property="saleNumber"/>
        <result column="amount_paid" property="amountPaid"/>
        <result column="amount_payable" property="amountPayable"/>
        <result column="sale_date" property="saleDate"/>
        <result column="state" property="state"/>
        <result column="remarks" property="remarks"/>
        <result column="customer_id" property="customerId"/>
        <result column="user_id" property="userId"/>

        <result column="customer_name" property="customerName"/>

        <result column="true_name" property="trueName"/>

    </resultMap>

    <select id="listBy" resultMap="listByResultMap">
        SELECT
        t1.sale_list_id,
        t1.sale_number,
        t1.amount_paid,
        t1.amount_payable,
        t1.sale_date,
        t1.state,
        t1.remarks,
        t1.customer_id,
        t1.user_id,
        t2.customer_name,
        t3.true_name
        FROM
        `t_sale_list` t1
        LEFT JOIN t_customer t2 ON t1.customer_id = t2.customer_id
        LEFT JOIN t_user t3 ON t1.user_id = t3.user_id
        <where>
            t1.sale_date BETWEEN #{sTime} AND #{eTime}
            <if test="saleNumber != null and saleNumber != ''">
                AND
                t1.sale_number LIKE CONCAT('%', #{saleNumber} ,'%')
            </if>
            <if test="customerId != null and customerId != ''">
                AND
                t1.customer_id = #{customerId}
            </if>
            <if test="state != null and state != ''">
                AND
                t1.state = #{state}
            </if>

        </where>

    </select>

    <select id="showDetails" resultType="com.atguigu.jxc.entity.SaleListGoods">
        SELECT
            *
        FROM
            t_sale_list_goods
        WHERE
            sale_list_id = #{saleListId}
    </select>

    <delete id="deleteBySid" parameterType="java.lang.Integer">
        DELETE FROM t_sale_list WHERE sale_list_id = #{saleListId};
    </delete>

    <delete id="deleteBySidOnSaleListGoods" parameterType="java.lang.Integer">
        DELETE FROM t_sale_list_goods WHERE sale_list_id = #{saleListId};
    </delete>
    <insert id="saveSaleList" useGeneratedKeys="true" keyProperty="saleListId" parameterType="com.atguigu.jxc.entity.SaleList">
        INSERT INTO t_sale_list
        (
            sale_number, amount_paid,amount_payable,sale_date, state,remarks,customer_id, user_id
        )
        VALUES
        (
            #{saleNumber}, #{amountPaid},#{amountPayable},#{saleDate},#{state}, #{remarks},#{customerId},#{userId}
        )
    </insert>
    <insert id="saveSaleListGoods" useGeneratedKeys="true" keyProperty="saleListGoodsId" parameterType="com.atguigu.jxc.entity.SaleListGoods">
        INSERT INTO t_sale_list_goods
        (
            goods_id, goods_code, goods_name, goods_model, goods_unit,
            goods_num, price, total, sale_list_id, goods_type_id
        )
        VALUES
        (
            #{goodsId}, #{goodsCode}, #{goodsName}, #{goodsModel}, #{goodsUnit},
            #{goodsNum}, #{price}, #{total}, #{saleListId}, #{goodsTypeId}
        )
    </insert>

    <update id="updateState" parameterType="integer">
        UPDATE t_sale_list
        SET t_sale_list.state = 1
        WHERE t_sale_list.sale_list_id = #{saleListId}
    </update>
</mapper>